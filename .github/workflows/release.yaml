name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    tags:
      - v[0-9].[0-9].[0-9]**

env:
  CLOUDSMITH_REGISTRY: docker.cloudsmith.io/tetrate/tis-containers
  IMAGE: istio-registry-sync

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      id-token: write   # This is required for requesting the JWT
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build static binary
        run: make build-static
      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.ECR_PUSH_ROLE }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        if: github.event_name == 'push'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker ECR
        id: meta-ecr
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE }}
      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image ECR
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./docker/
          push: true
          tags: ${{ steps.meta-ecr.outputs.tags }}
      - name: Login Cloudsmith
        uses: docker/login-action@v2
        with:
          registry: docker.cloudsmith.io
          username: ${{ secrets.TETRATE_CI_CLOUDSMITH_USER }}
          password: ${{ secrets.TETRATE_CI_CLOUDSMITH_API_KEY }}
      - name: Extract metadata (tags, labels) for Docker Cloudsmith
        id: meta-cloudsmith
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.CLOUDSMITH_REGISTRY }}/${{ env.IMAGE }}
      - name: Push Docker image Cloudsmith
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./docker/
          push: true
          tags: ${{ steps.meta-cloudsmith.outputs.tags }}
